<?xml version="1.0" ?>
<project name="Spring.Web.Mvc4.Tests" default="test" xmlns="http://nant.sf.net/schemas/nant.xsd">

    <include buildfile="${spring.basedir}/common-project.include" />
    <!--
        Required properties:
            * current.bin.dir           - (path) root level to build to
            * build.debug               - (true|false) debug build?
            * current.build.defines.csc - framework-specific build defines
            * lib.dir                   - framework-specific assembly references
    -->
    <target name="build">
        <!-- build Spring.Web.Mvc -->
        <csc target="library" define="${current.build.defines.csc}" 
	     warnaserror="true" 
             optimize="${build.optimize}"
	     debug="${current.build.debug}"
             output="${current.bin.dir}/${project::get-name()}.dll" 
	     doc="${current.bin.dir}/${project::get-name()}.xml">
            <nowarn>
                <warning number="${nowarn.numbers.test}" /> <!-- 1701 -->
                <warning number="${nowarn.numbers.test},1587" if="${nant.settings.currentframework=='mono-2.0'}"/>
            </nowarn>
            <sources failonempty="true">
                <include name="**/*.cs" />
                <include name="../CommonAssemblyInfo.cs" />
				<include name="../Spring.Web.Mvc3.Tests/**/*.cs" />
            </sources>
            <resources prefix="Spring" dynamicprefix="true" failonempty="true">
                <include name="../Spring.Web.Mvc3.Tests/**/*.resx" />
                <include name="../Spring.Web.Mvc3.Tests/**/*.xsd" />
                <include name="../Spring.Web.Mvc3.Tests/**/*.txt" />
                <include name="../Spring.Web.Mvc3.Tests/**/*.xml" />
                <exclude name="../Spring.Web.Mvc3.Tests/Data/**/*" />
                <exclude name="../Spring.Web.Mvc3.Tests/obj/**/*" />
            </resources>
            <references basedir="${current.bin.dir}">
                <include name="*.dll" />
				<include name="System.Configuration.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				<include name="System.Drawing.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				<include name="System.Xml.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				<include name="System.Web.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				<include name="System.Web.Services.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				<include name="System.Data.dll" if="${nant.settings.currentframework=='mono-2.0'}" />
				
				<include name="System.Web.Abstractions.dll"/>
				<include name="System.Web.Routing.dll"/>
				
				<include name="C:\Program Files\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Mvc.dll" />
				<include name="C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Mvc.dll" />
				<include name="C:\Program Files\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Http.dll" />
				<include name="C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Http.dll" />
				<include name="C:\Program Files\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Http.WebHost.dll" />
				<include name="C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies\System.Web.Http.WebHost.dll" />

				
                <exclude name="${project::get-name()}.dll" />
            
                <include name="${lib.dir}/nunit.core.interfaces.dll" />
				<exclude name="System.Web.Extensions.dll" />
				<exclude name="Spring.Web.Mvc.dll" />
				<exclude name="Spring.Web.Mvc.Tests.dll" />
				<exclude name="Spring.Web.Mvc3.dll" />
				<exclude name="Spring.Web.Mvc3.Tests.dll" />
            </references>
        </csc>
        <copy todir="${current.bin.dir}">
            <fileset basedir="${project::get-base-directory()}/Data">
                <include name="**/*.*" />
            </fileset>
		</copy>
		<copy todir="${current.bin.dir}">
            <fileset basedir="${project::get-base-directory()}">
                <include name="**/*.xml" />
            </fileset>
		</copy>
    </target>

    <target name="test" depends="build">
        <!-- property name="test.assemblyname" value="${project::get-name()}" / -->
        <call target="common.run-tests" />
    </target>
<!--
    <target name="test" depends="build">
        <nunit2outproc>
            <formatter type="Plain" />
            <formatter type="Xml" usefile="true" extension=".xml" outputdir="${current.bin.dir}/results" />
            <test assemblyname="${current.bin.dir}/${project::get-name()}.dll" />
        </nunit2outproc>
    </target>
-->
</project>
