1、变量的命名
	首先我们要保证的就是变量的名称一定要有意义(就是我们看到了变量的名字，就知道变量在这段程序中的作用)
	Camel：多余用给变量或者字段命名，第一个单词的首字母小写，其余每个单词的首字母大写。
	我们给字段命名，前面必须加下划线。
	_highSchoolStudent
	Pascal：要求我们每个单词的首字母都要大写，其余每个单词的首字母小写。
	HighSchoolStudent
	
	int max=	GetMax();
	int min=	GetMin();


2、进程	
	一个应用程序就是一个进程，而一个进程又是由多个线程组成的。
	进程帮助我们在内存中分配应用程序执行所需要的空间。
	---->
	我们可以通过进程来直接操作应用程序。	
	

3、面向对象复习
	类决定了对象将要拥有的属性和行为。
	封装：
		--->减少了大量的冗余代码
		--->封装将一坨很难理解的功能封装起来，但是对外提供了一个很简单的使用接口。我们会使用就OK。
	继承：
		--->减少了类中的冗余代码
		--->让类与类产生了关系，为多态打下了基础。
		特性：
			单根性：一个子类只能有一个父类
			传递性：爷爷类 爹类 儿子类
		里氏转换：
			1、子类可以赋值给父类
			2、如果父类中装的是子类对象，则可以将这个父类转换为对应的子类对象
			---->关键字
				1、is：返回bool类型，指示是否可以做这个转换
				2、as：如果转换成功，则返回对象，否则返回null
			作用：我们可以将所有的子类都当做是父类来看，针对父类进行编程，写出通用的代码，适应需求的不断改变。	
	多态：
		--->虚方法
			virtual override
		--->抽象类
			abstract override
		--->接口
			interface 
4、关键字
	new
		1、创建对象
			--->在堆中开辟空间
			--->在开辟的堆空间中创建对象
			--->调用对象的构造函数
		2、隐藏父类的成员	
	this
		1、代表当前类的对象
		2、显示的调用自己的构造函数
	base
		1、显示调用父类的构造函数
		2、调用父类的成员
	
	
	
5、抽象类实现多态练习
	模拟将外部的移动存储设备插到电脑上进行读写数据。
	U盘
		Read()
		Write()
	移动硬盘
		Read();
		Write();
	MP3
		Read();
		Write();
		PlayMusic();
	手机....平板电脑......
	
	
6、接口
	---->接口是一种能力
	---->接口也是一种规范
		---->如果你继承了这个接口，就必须按照接口的要求来实现这个接口。
	interface  I开头...able结尾


7、石头剪刀布案例
	玩家
		--->出拳的方法，是我们指定的
	电脑
		--->出拳的方法，随机的
	裁判
		--->判断输赢或者平手

	石头1  剪刀2  布3
	玩家赢：石头1  剪刀2 =-1 剪刀2 布3 =-1 布3 石头1=2
	平手：玩家-电脑=0；
	电脑赢：



8、访问修饰符
public private internal protected protected internal
public:在哪都可以访问
private:私有的，只能在当前类的内部进行访问
internal:只能在当前程序集中访问。
protected：受保护的，可以在当前类以及该类的子类中访问

	注意点：
		1、能够修饰类的访问修饰符只有两个：public internal(默认就是internal)。
		2、在同一个项目中，public的权限跟internal是一样的。
		3、子类的访问权限不能高于父类。
		









	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	